/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package setka;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import java.util.Calendar;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;


/**
 *
 * @author User
 */
public class MySetka extends javax.swing.JFrame {

    /**
     * Creates new form MySetka
     */
        
    
    public MySetka() {
        initComponents();     
    }
class TableModel extends DefaultTableModel{
        public boolean isCellEditable ( int row, int column )
            {
                return false;
            }
        
}
int[][] cellval  = new int[365][2];
class CellRenderer extends JLabel implements TableCellRenderer {
        private boolean check(){
//            if(){
//                return true;
//            }
        return false;
    }
        
    public Component getTableCellRendererComponent(JTable table, Object value, 
                boolean isSelected, boolean hasFocus, int row, int column) {           
        JLabel edit = new JLabel();
        if (value!=null){
        edit.setText(value.toString());
        Font font = new Font("Garamond", Font.PLAIN, 34);
        edit.setForeground(new Color(84,74,73));
        edit.setBackground(new Color(238,228,227));
        edit.setFont(font);
        edit.setHorizontalAlignment(CENTER);
        if(check()==true){
            ImageIcon icon1 = new ImageIcon(new ImageIcon("1.png").getImage().getScaledInstance(10, 10, Image.SCALE_DEFAULT));
            edit.setIcon(icon1);
        }
        }
        if(isSelected){
            if(value!=null){
                if(check()==true){
                    ImageIcon icon1 = new ImageIcon(new ImageIcon("1.png").getImage().getScaledInstance(10, 10, Image.SCALE_DEFAULT));
                    edit.setIcon(icon1);
                }
                int i=0;
                cellval[i][0] = count;
                cellval[i][1] = (int)value;
                System.out.print(cellval[i][0]+" "+cellval[i][1]);
                System.out.println();
                i++;
            
        }
        }
        if(isSelected){              
            if (value!=null){             
                edit.setText(value.toString());
                Font font = new Font("Garamond", Font.PLAIN, 34);
                edit.setForeground(new Color(84,74,73));              
                edit.setFont(font);
                edit.setHorizontalAlignment(CENTER);
                
            }           
            edit.setBorder(new LineBorder(new Color(150,0,50), 2));
            return edit;
        }
        edit.setBackground(new Color(238,228,227));
        edit.setBorder(new LineBorder(new Color(90,36,49), 0));       
        return edit;    
        }
        
    }
    class MyAction implements ActionListener{
        public void actionPerformed(ActionEvent evt){
            
        }
    }
    
   
 

    private void cellrend(){
        table1.setDefaultRenderer(Object.class, new CellRenderer());
    }
   
    
    class MyTableHeaderRenderer implements TableCellRenderer {
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                         boolean hasFocus, int rowIndex, int vColIndex) {
            JTextField edit = new JTextField();
            edit.setText(value.toString());
            Font font = new Font("Garamond", Font.PLAIN, 27);
            edit.setForeground(new Color(146,14,38));
            edit.setBackground(new Color(238,228,227));
            edit.setFont(font);            
            edit.setBorder(new LineBorder(new Color(238,228,227), 2));
            edit.setHorizontalAlignment(edit.CENTER);
            return edit;
        }
    }
    
    /**
     *
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        nextmonth = new javax.swing.JButton();
        prevmonth = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(238, 228, 227));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        mainpanel.setBackground(new java.awt.Color(238, 228, 227));
        mainpanel.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel2.setFont(new java.awt.Font("Garamond", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(146, 14, 38));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jScrollPane1.setBackground(new java.awt.Color(238, 228, 227));
        jScrollPane1.setBorder(null);

        table1.setBackground(new java.awt.Color(238, 228, 227));
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table1.setToolTipText("");
        table1.setCellSelectionEnabled(true);
        table1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table1.getTableHeader().setResizingAllowed(false);
        table1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table1);

        nextmonth.setBackground(new java.awt.Color(238, 228, 227));
        nextmonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/right.png"))); // NOI18N
        nextmonth.setBorder(null);
        nextmonth.setBorderPainted(false);
        nextmonth.setFocusPainted(false);
        nextmonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextmonthActionPerformed(evt);
            }
        });

        prevmonth.setBackground(new java.awt.Color(238, 228, 227));
        prevmonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/left.png"))); // NOI18N
        prevmonth.setBorder(null);
        prevmonth.setFocusPainted(false);
        prevmonth.setIconTextGap(0);
        prevmonth.setRequestFocusEnabled(false);
        prevmonth.setRolloverEnabled(false);
        prevmonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevmonthActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/line.png"))); // NOI18N

        javax.swing.GroupLayout mainpanelLayout = new javax.swing.GroupLayout(mainpanel);
        mainpanel.setLayout(mainpanelLayout);
        mainpanelLayout.setHorizontalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addContainerGap(338, Short.MAX_VALUE)
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainpanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainpanelLayout.createSequentialGroup()
                        .addComponent(prevmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(mainpanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(70, 70, 70))))
        );
        mainpanelLayout.setVerticalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nextmonth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prevmonth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    TableModel mod1;     
       
    private void fillJanuary(){        
            for (int i = 5; i >=0 ; i--) {
                mod1.removeRow(i);
                }
            mod1.setRowCount(6);
            mod1.setValueAt(1, 0, 6);
            
            jLabel2.setText("Январь 2017");
            
            int year1 = Integer.valueOf(2017);
            int month1 = 0;
            int day1 = 1 ;
            Calendar cnd = Calendar.getInstance();
            
            cnd.set(year1, month1, day1);
            int start = cnd.get(cd.DAY_OF_WEEK);            
            start--;
            int maxday = cnd.getActualMaximum(cd.DAY_OF_MONTH);       
            int j=1;  
            for(int i=2;i<=maxday;i++){
                mod1.setValueAt(i, j, start);
                start++;
                if(start==7){
                    start=0;
                    j++;
                }
            }
    }  
    
    Calendar cd = Calendar.getInstance();
    int year = Integer.valueOf(2017);
    int month = 0;
    int count=0;
    int day = 1;
    
    private int fillnextmonth(int count){
        for (int i = 5; i >=0 ; i--) {
                mod1.removeRow(i);
                }
            mod1.setRowCount(6);                                   
            count++;
            if (count==12){   
                month = 0;
                count=0;
            }            
            cd.set(year, month+count, day);
            
            if((month+count)==0){              
                fillJanuary();
                return count;
                
            }
            if((month+count)==1){
                jLabel2.removeAll();
                jLabel2.setText("Февраль 2017");
            }
            if((month+count)==2){
                jLabel2.removeAll();
                jLabel2.setText("Март 2017");
            }
            if((month+count)==3){
                jLabel2.removeAll();
                jLabel2.setText("Апрель 2017");
            }
            if((month+count)==4){
                jLabel2.removeAll();
                jLabel2.setText("Май 2017");
            }
            if((month+count)==5){
                jLabel2.removeAll();
                jLabel2.setText("Июнь 2017");
            }
            if((month+count)==6){
                jLabel2.removeAll();
                jLabel2.setText("Июль 2017");
            }
            if((month+count)==7){
                jLabel2.removeAll();
                jLabel2.setText("Август 2017");
            }
            if((month+count)==8){
                jLabel2.removeAll();
                jLabel2.setText("Сентябрь 2017");
            }
            if((month+count)==9){
                jLabel2.removeAll();
                jLabel2.setText("Октябрь 2017");
            }
            if((month+count)==10){
                jLabel2.removeAll();
                jLabel2.setText("Ноябрь 2017");
            }
            if((month+count)==11){
                jLabel2.removeAll();
                jLabel2.setText("Декабрь 2017");
            }
            int start = cd.get(cd.DAY_OF_WEEK);                   
            if(start == 1){
                start = 6;
            }
            if(start == 2){
                start = 0;
            }
            if(start == 3){
                start = 1;
            }
            if(start == 4){
                start = 2;
            }
            if(start == 5){
                start = 3;
            }
            if(start == 6){
                start = 4;
            }
            if(start == 7){
                start = 5;
            }
            int maxday=cd.getActualMaximum(cd.DAY_OF_MONTH);         
            int j=0;  
            for(int i=1;i<=maxday;i++){
                mod1.setValueAt(i, j, start);
                start++;
                if(start==7){
                    start=0;
                    j++;
                }
            }
            
            return count;
    }
    
    private int fillprevmonth(int count){
        for (int i = 5; i >=0 ; i--) {
                mod1.removeRow(i);
                }
            mod1.setRowCount(6);           
            Calendar cd = Calendar.getInstance();
            
            count--;            
            if (count < 0){
                count = 11;
            }                
            cd.set(year,month+count,day);           
            if((month+count)==0){
                fillJanuary();
                return count;
            }
            if((month+count)==1){
                jLabel2.removeAll();
                jLabel2.setText("Февраль 2017");
            }
            if((month+count)==2){
                jLabel2.removeAll();
                jLabel2.setText("Март 2017");
            }
            if((month+count)==3){
                jLabel2.removeAll();
                jLabel2.setText("Апрель 2017");
            }
            if((month+count)==4){
                jLabel2.removeAll();
                jLabel2.setText("Май 2017");
            }
            if((month+count)==5){
                jLabel2.removeAll();
                jLabel2.setText("Июнь 2017");
            }
            if((month+count)==6){
                jLabel2.removeAll();
                jLabel2.setText("Июль 2017");
            }
            if((month+count)==7){
                jLabel2.removeAll();
                jLabel2.setText("Август 2017");
            }
            if((month+count)==8){
                jLabel2.removeAll();
                jLabel2.setText("Сентябрь 2017");
            }
            if((month+count)==9){
                jLabel2.removeAll();
                jLabel2.setText("Октябрь 2017");
            }
            if((month+count)==10){
                jLabel2.removeAll();
                jLabel2.setText("Ноябрь 2017");
            }
            if((month+count)==11){
                jLabel2.removeAll();
                jLabel2.setText("Декабрь 2017");
            }
            int start = cd.get(cd.DAY_OF_WEEK);
            if(start == 1){
                start = 6;
            }
            if(start == 2){
                start = 0;
            }
            if(start == 3){
                start = 1;
            }
            if(start == 4){
                start = 2;
            }
            if(start == 5){
                start = 3;
            }
            if(start == 6){
                start = 4;
            }
            if(start == 7){
                start = 5;
            }        
            int maxday=cd.getActualMaximum(cd.DAY_OF_MONTH);         
            int j=0;
            for(int i=1;i<=maxday;i++){
                mod1.setValueAt(i, j, start);
                start++;
                if(start==7){
                    start=0;
                    j++;
                }
            }           
            return count;
    }
    
    private void nextmonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextmonthActionPerformed
             count = fillnextmonth (count);

    }//GEN-LAST:event_nextmonthActionPerformed

    private void prevmonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevmonthActionPerformed
             count = fillprevmonth (count);
    }//GEN-LAST:event_prevmonthActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
            mod1 = new TableModel();
            table1.setModel(mod1);
            mod1.addColumn("Пн");
            mod1.addColumn("Вт");
            mod1.addColumn("Ср");
            mod1.addColumn("Чт");
            mod1.addColumn("Пт");
            mod1.addColumn("Сб");
            mod1.addColumn("Вс");
            mod1.setRowCount(6);
           
            for(int i=0;i<=6;i++){
                TableColumn col = table1.getColumnModel().getColumn(i);
                col.setHeaderRenderer(new MyTableHeaderRenderer());
            }
            
            
      
            for (int i = 4; i >=0 ; i--) {
                mod1.removeRow(i);
                }
            mod1.setRowCount(6);
            
            JPanel lineHoriz = new JPanel();
            lineHoriz.setSize(500, 1);
            table1.add(lineHoriz);
            lineHoriz.setBackground(new Color(90,36,49));
            
            JPanel lineVert = new JPanel();
            lineVert.setSize(1, 329);
            table1.add(lineVert);
            lineVert.setBackground(new Color(90,36,49));
            
            fillJanuary();    

            table1.setShowGrid(true);
           
          table1.setRowHeight((jScrollPane1.getHeight()-jLabel2.getHeight())/6);
          table1.setDefaultRenderer(Object.class, new CellRenderer());// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MySetka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MySetka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MySetka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MySetka.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
           
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MySetka().setVisible(true);
            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JButton nextmonth;
    private javax.swing.JButton prevmonth;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables
}
